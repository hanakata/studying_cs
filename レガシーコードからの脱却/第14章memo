第14章 レガシーコードからの学び

もっと良く速く安く
テスト駆動開発はより確実に品質を上げることが可能。
テストファーストにすることで効率よく開発が可能になる。

不要な出費はしない
コンピューターは人が何をしようとしているかを知らない。
なので当然バグは発生する。
それを直す時間は多かれ少なかれ存在する。
CLEANでテスト可能なコードは圧倒的にコストを下げる。

まっすぐで狭いところを歩く
ソフトウェア開発の世界ではすべてに意味があってまっすぐで狭い理解の道がある。
そのまっすぐで狭い道を歩くよう努力する。
→道を外れたら気づけるから

ソフトウェア職のスキルを高める
ソフトウェア開発で何が重要で何が重要でないかを把握する必要がある
→学びやすく理解しやすい原則やプラクティスを共有することに重点的に取り組まなければならない。
ソフトウェア業界の人間は常に進歩し支えあう必要がある。

アジャイルの向こうへ
ソフトウェア開発は単純作業ではない。
ソフトウェアを改善したいという思いがあれば基準を厳しくしそれを達成できる人を集めること

理解を体現する
良いソフトウェアを作るための公式は存在しない。
ツールをいかにうまく使いこなせるか。

成長する勇気
未知は恐ろしい、なので繰り返し同じことをしてしまう。
何をすべきか、だけではなくいつやるか、どうやるか、なぜやるかを理解して
自身を納得させ進められるようにすること。
