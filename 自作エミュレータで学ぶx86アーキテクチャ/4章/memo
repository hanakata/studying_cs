4章 BIOSの仕組みと実機起動
CPUはI/Oポートを読み書きするのにin/out命令を使う。
この2命令さえあればすべての周辺機器を制御できる
昔は周辺機器を扱う部分も作っていたが現在はBIOSがあるのでそこまでやらない。

BIOS＝基本入出力システム
BIOSは周辺機器ごとの仕様の差を吸収しプログラマに統一された制御方法を提供する。
現在ではBIOSが活用されることはめったにない
→古い時代の規格だから。
BIOSはIntel8086時代の動作モードでしか呼び出せず、
現在のWindos、Mac OS Xはi286以降から導入された動作モードで動く。
現在はOS自身が持つドライバソフトウェアで機器を制御する。
現在ではPCの電源を入れた時の機器の初期化やHDDから最初のプログラムローダーをメモリに呼び出す役割
→これもUEFIに取られ気味
BIOS機能を用いて画面にAを出すプログラムは以下
mov bh, 0       ;おまじない
mov bl, 15      ;文字色は白
mov ah, 0x0e    ;1文字表示
mov al, 0x4     ;A
int 0x10        ;BIOS呼び出し

intは割り込み処理
実機でBIOSを利用するには32ビットではダメ。

BIOSの機能はまず割り込み番号でおおざっぱに分類されahレジスタの値で細かい機能が決まるようになっている。
intでBIOSの割り込みが可能。callと似ているがかなり違う。
割り込みとは？
プログラムを実行中のCPUに割り込んで他のプログラムを実行すること
割り込みを可能とする仕組み
CPUは1つの命令を実行するたびに割り込みがないか確認する。
→要求が来ていれば現在の作業を中断して再開できるようflagの内容を保存しサブルーチン」を呼び出す。

割り込みで使うサブルーチンの中身は以下の要件がある
1.いつ呼び出されるかわからないこと前提
2.処理を終えて戻ってくるのにretではなくiretを利用する。
サブルーチンを登録するためのメモリ領域がありベクタテーブルとか呼ばれる。
そこにあるサブルーチンがポーリングして入力を待ち受けたり時間がかかる処理の完了を通知してもらう。
入出力装置からの割り込みをハードウェア割り込みと呼ぶ。

プロテクトモードではintとcallはさらに違うものとなる。
これは特権というモードがありOSとそのうえで動くアプリケーションの権限を分けることができる。
アプリ側で特権が必要な場合には割り込みを利用し、割り込みで動作したタイミングで
特権昇格し復帰時に元に戻す。

BIOSは起動デバイスから起動プログラムをメモリに読みだす役目もある。
これはHDDに限らずBIOSが対応している機器ならなんでも起動できる。
HDDはブロックデバイスという512バイト、もしくは4096バイトの単位でデータを管理している。
1ブロックを物理セクタと呼びそれごとにデータを読み書きする。
デバイスが起動可能かは先頭セクタを調べてそのセクタの最後の2バイトに0x55、0xaaが書き込まれていたら
BIOSはデバイスが起動可能だと判断する。

USBのPBRを見るにはddで先頭セクタを読み出してbootsでファイル解析すれば読める。
